<!--p class="text--right">
  <%#= link_to "New Search", new_search_query_path, :class => "btn   btn--small bordered push-half--right" %>
  <%#= link_to "Revise Search", new_search_query_path(:search_id => @search_query), :class => "btn   btn--small bordered push-half--right" %>
  <%#= link_to "Printable Format", '#', :class => "btn   btn--small bordered push-half--right"%>
  <--a href="#" id="citation-toggle" class="btn   btn--small bordered push-half--right citation-toggle">Generate Citation</a>
  </p-->
<!--h1 class="title">Entry Information</h1>
<p>Has our search engine found the record you are seeking? The next step is to ordering your certificate ! Click on Ordering Certificates to learn what to do now.</p-->

<%= render 'flash_notice' %>

<% title "Record Details" %>
<%= link_to "#{app_icons[:left_arrow_pink]} Back".html_safe, search_query_path(@search_query, id: params[:search_id]), class: " btn   btn--small" if params[:search_id].present?%>


<% print_friendly = (defined?(@printable_format) && @printable_format) ? true : false %>
  <h1 class="accessibility">Entry Information</h1>
  <div class="grid">
    <div class="grid__item seven-tenths lap-seven-tenths palm-one-whole ">
      <p class="alpha push-half--top project-text-color flush--bottom"><strong><%= "Entry Information: #{@search_record[:GivenName].upcase} #{@search_record[:Surname].upcase}" %></strong></p>
      <hr>
      <section>
        <div class="grid__item two-thirds lap-one-whole palm-one-whole hard--left">
          <table class="table--bordered table--data">
            <thead>
              <!--tr>
                <td colspan="2">
                  <h2>Entry Information</h2>
                </td>
              </tr-->
            </thead>
            <tbody>
            <%# raise @search_record[:RecordTypeID].inspect%>
              <% record_type = RecordType::display_name(@search_record[:RecordTypeID])%>
              <tr>
                <th class="project-text-color">
                  Event Type
                </th>
                <td>
                  <%= "#{record_type}" %>
                </td>
              </tr>
              <tr>
                <th class="project-text-color">
                  Date
                </th>
                <td>
                  <%= "#{QuarterDetails.quarters.key(calculate_quarter(@search_record[:QuarterNumber])).upcase} #{from_quarter_number_to_year(@search_record[:QuarterNumber])}"%>
                </td>
              </tr>
              <tr>
                <th class="project-text-color">
                  District
                </th>
                <td>
                  <%= "#{@search_record[:District]}" %>
                </td>
              </tr>
              <tr>
                <th class="project-text-color">
                  Mother or Spouse Surname
                </th>
                <td>
                  <%= "#{@search_record[:AssociateName]}" %>
                </td>
              </tr>
              <tr>
                <th class="project-text-color">
                  Age at Death/Date of Birth
                </th>
                <td>
                  <%= "#{@search_record[:AgeAtDeath]}" %>
                </td>
              </tr>
              <tr>
                <th class="project-text-color">
                  Volume
                </th>
                <td>
                  <%= "#{@search_record[:Volume]}" %>
                </td>
              </tr>
              <tr>
                <th class="project-text-color" style="font-family: serif;">
                  Page
                </th>
                <td>
                  <%= link_to "#{@search_record[:Page]}", same_page_entries_path(volume: @search_record[:Volume], page: @search_record[:Page], record: @search_record[:RecordTypeID], quarter: @search_record[:QuarterNumber]), target: "_blank" %>
                </td>
              </tr>
              <tr>
                <th class="project-text-color">
                  Transcriber
                </th>
                <td>
                  <%= @search_record.transcribers.join(', ') if @search_record.transcribers.present? %>
                </td>
              </tr>
            </tbody>
          </table>
          <div class='push-half--top'>
            <div class="float--right">
              <% if params[:search_id].present? %>
                <%= link_to '<i class="fa fa-chevron-left view_arrow"></i> Previous Result'.html_safe, friendly_bmd_record_details_path(params[:search_id], @previous_record, @previous_record.friendly_url), class: 'push-half--right push-half--top' unless @previous_record.nil? %>
                <%= link_to 'Next Result <i class="fa fa-chevron-right view_arrow"></i> '.html_safe, friendly_bmd_record_details_path(params[:search_id], @next_record, @next_record.friendly_url), class: 'push-half--right push-half--top' unless @next_record.nil?%>
              <% end %>
            </div>
          </div>
        </div>
      </section>
      <div class="grid__item one-whole">
        <h4>Scanned Images</h4>
        <% year = from_quarter_number_to_year(@search_record[:QuarterNumber]) %>
        <% event = "#{record_type.capitalize}s" %>
        <% quarter = QuarterDetails.quarters.key(calculate_quarter(@search_record[:QuarterNumber])).capitalize %>
        <% image_server = "https://images.freebmd.org.uk/SUG" %>
        <% scan_links = @search_record.uniq_scanlists %>
        <% acc_scans = @search_record.get_non_multiple_scans %>
        <% acc_mul_scans = @search_record.multiple_best_probable_scans%>
        <% if scan_links.present? %>
          <ul>
            <div class="grid">
              <% scan_links.each do |s| %>
                <div class = "grid__item one-whole lap-one-whole palm-one-whole push--bottom" >
                  <% series = s.SeriesRangeFileName %>
                  <% image_file_path = "#{image_server}/#{year}/#{event}/#{quarter}/#{series}" %>
                  <div class='labels'>
                    <%#= label_tag 'scan_name','' , class: "ttip", tabindex: "0"  do %>
                        <%#="#{series}".html_safe %>
                    <%# end %>
                  </div>
                  <%= link_to "#{series}".html_safe, image_file_path, target: "_blank"%>
                </div>
              <% end %>
            </div>
          </ul>
        <% end %>
        <% if acc_scans.present? %>
          <ul>
            <div class="grid">
              <% acc_scans.each do |s| %>
                <div class = "grid__item one-whole lap-one-whole palm-one-whole push--bottom" >
                  <% series = s.SeriesID %>
                  <% range = "/#{s.range.Range}" if s.Range.present?%>
                  <% file = s.Filename %>
                  <% image_file_path = "#{image_server}/#{year}/#{event}/#{quarter}/#{series}#{range}/#{file}" %>
                  <div class=''>
                    <%#= label_tag 'scan_name','' , class: "ttip", tabindex: "0"  do %>
                        <small><%#="#{series}#{range}/#{file}".html_safe %></small>
                    <%# end %>
                  </div>
                  <%= link_to "#{series}#{range}/#{file}".html_safe, image_file_path, target: "_blank"%>
                </div>
              <% end %>
            </div>
          </ul>
        <% end %>
        <% if acc_mul_scans.present? %>
          <ul>
            <div class="grid">
              <% acc_mul_scans.each do |s| %>
                <div class = "grid__item one-whole lap-one-whole palm-one-whole push--bottom" >
                  <% series = s.SeriesID %>
                  <% range = "/#{s.Range}" if s.Range.present?%>
                  <% @search_record.get_component_images.each do |fn| %>
                    <% image_file_path = "#{image_server}/#{year}/#{event}/#{quarter}/#{series}#{range}/#{fn}" %>
                    <div class=''>
                      <%#= label_tag 'scan_name','' , class: "ttip", tabindex: "0"  do %>
                          <%#="#{series}#{range}/#{fn}".html_safe %>
                      <%# end %>
                    </div>
                    <%= link_to "#{series}#{range}/#{fn}".html_safe, image_file_path, target: "_blank"%>
                  <% end %>
                </div>
              <% end %>
            </div>
          </ul>
        <% end %>
      </div>
      <div class="grid__item one-whole lap-one-whole palm-one-whole push--bottom">
        <h4>Corrections</h4>
        <p>If you have a correction to this entry, please submit a correction. Please note that you can view the scan from which this entry was transcribed, please click on .Please examine this image to verify that any correction you submit is the same as in the GRO index.</p>
        <%= link_to "I have viewed the scan and wish to submit a correction", report_error_contact_path(@search_record, :query => @search_query), target: "_blank" %>
      </div>
      <div class="grid__item one-whole lap-one-whole palm-one-whole push--bottom">
        <h4>Postems</h4>
        <p>Do you know more about the people or event in this record that you are willing to share with other researchers? We call these helpful additions to the database 'postems'. For example, you you know a more precise place or other details from a certificate or from a search of FreeREG, or more about the family from a search on FreeCEN, or have found other records about them in another country's registration system. Contribute what you know</p>
        <% if @search_record.postems_list.present? %>
          <p>Below are the list of postems</p>
          <%#= raise postem.Created.inspect%>
          <table class="table--bordered table--data">
            <thead>
              <th>Date</th>
              <th>Postem</th>
            </thead>
            <tbody>
              <% @search_record.postems_list.each do |postem|%>
                <tr>
                  <td>
                    <%= DateTime.strptime("#{postem.Created}",'%s').to_date if postem.Created.present?%>
                  </td>
                  <td>
                    <%= auto_link(postem.Information, :html => { :target => '_blank' }) %>
                  </td>
                </tr>
              <% end %>
            </tbody>
          </table>
        <% end%>
        <p id="create_postem">Add a postem</p>
        <div class="create_postem_div">
          <%= semantic_form_for(@new_postem) do |f| %>
            <%= f.hidden_field('Hash', value: @new_postem.Hash) %>
            <%= hidden_field_tag('search_query', @search_query.id) %>
            <ol class="grid">
              <li class="grid__item desk-wide-three-quarters desk-three-quarters lap-three-quarters palm-one-whole push--bottom">
                <%= text_area_tag 'postem[Information]', nil, rows: 7, style: 'width: 100%'%>
              </li>
            
              <div class="grid__item desk-wide-one-whole desk-one-whole lap-one-whole palm-one-whole">
                <%= button_tag 'Add Postem', type: :submit, class: 'ladda-button kittumani' , id: 'postem_form_submit', data: {style: "contract" , color: appname.downcase, size: "s", "spinner-color" => "#ffffff"}%>
              </div>
            </ol>
          <% end %>
        </div>
      </div>
    </div>
    <% unless print_friendly %>
      <% if device_type == :desktop %>
        <div class="grid__item two-tenths lap-one-tenths palm-one-whole "  id='results_table_ad'>
          <center>
            <p>Advertisement</p>
            <%= adsence_right_side_banner %>
          </center>
        </div>
      <% end %>
    <% end %>
  </div>
  <script type="text/javascript">
    $("#create_postem").click(
      function() {
        $(".create_postem_div").show();
        $("#create_postem").hide();
    });
  </script>
  
  
    
  <!--script>
    $('.whole_image1').hide();
    $('.postems, .transcribers').hide();
    $('.click_scan').css('border', "none")
    $('.click_postem, .click_transcriber').css('border', "1px solid grey")

    $('.click_scan').click(function() {
        $('.scan_info').show();
        //$('.click_postem, .click_transcriber').css('background', "#ccc")
        $('.click_scan').css('background', "white")
        $('.click_scan').css('border', "none")
        $('.click_postem, .click_transcriber').css('border', "1px solid grey")
        $('.postems, .transcribers').hide();
    });
    $('.click_postem').click(function() {
        $('.postems').toggle();
        //$('.click_scan, .click_transcriber').css('background', "#ccc")
        $('.click_postem').css('background', "white")
        $('.click_postem').css('border', "none")
        $('.click_scan, .click_transcriber').css('border', "1px solid grey")
        $('.scan_info, .transcribers').hide();
    });
    $('.click_transcriber').click(function() {
        $('.transcribers').toggle();
        //$('.click_postem, .click_scan').css('background', "#ccc")
        $('.click_transcriber').css('background', "white")
        $('.click_transcriber').css('border', "none")
        $('.click_postem, .click_scan').css('border', "1px solid grey")
        $('.scan_info, .postems').hide();
    });

    $('.thumbnail').click(function() {
        $('.whole_image1').toggle();
        imageZoom("myimage", "myresult");
    });

    function imageZoom(imgID, resultID) {
      var img, lens, result, cx, cy;
      img = document.getElementById(imgID);
      result = document.getElementById(resultID);
      /* Create lens: */
      lens = document.createElement("DIV");
      lens.setAttribute("class", "img-zoom-lens");
      /* Insert lens: */
      img.parentElement.insertBefore(lens, img);
      /* Calculate the ratio between result DIV and lens: */
      cx = result.offsetWidth / lens.offsetWidth;
      cy = result.offsetHeight / lens.offsetHeight;
      /* Set background properties for the result DIV */
      result.style.backgroundImage = "url('" + img.src + "')";
      result.style.backgroundSize = (img.width * cx) + "px " + (img.height * cy) + "px";
      /* Execute a function when someone moves the cursor over the image, or the lens: */
      lens.addEventListener("mousemove", moveLens);
      img.addEventListener("mousemove", moveLens);
      /* And also for touch screens: */
      lens.addEventListener("touchmove", moveLens);
      img.addEventListener("touchmove", moveLens);

      function moveLens(e) {
        var pos, x, y;
        /* Prevent any other actions that may occur when moving over the image */
        e.preventDefault();
        /* Get the cursor's x and y positions: */
        pos = getCursorPos(e);
        /* Calculate the position of the lens: */
        x = pos.x - (lens.offsetWidth / 2);
        y = pos.y - (lens.offsetHeight / 2);
        /* Prevent the lens from being positioned outside the image: */
        if (x > img.width - lens.offsetWidth) {x = img.width - lens.offsetWidth;}
        if (x < 0) {x = 0;}
        if (y > img.height - lens.offsetHeight) {y = img.height - lens.offsetHeight;}
        if (y < 0) {y = 0;}
        /* Set the position of the lens: */
        lens.style.left = x + "px";
        lens.style.top = y + "px";
        /* Display what the lens "sees": */
        result.style.backgroundPosition = "-" + (x * cx) + "px -" + (y * cy) + "px";
      }

      function getCursorPos(e) {
        var a, x = 0, y = 0;
        e = e || window.event;
        /* Get the x and y positions of the image: */
        a = img.getBoundingClientRect();
        /* Calculate the cursor's x and y coordinates, relative to the image: */
        x = e.pageX - a.left;
        y = e.pageY - a.top;
        /* Consider any page scrolling: */
        x = x - window.pageXOffset;
        y = y - window.pageYOffset;
        return {x : x, y : y};
      }
    }
  </script-->