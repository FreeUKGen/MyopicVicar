<% if flash[:notice] %>
  <div class="weight--semibold text--center" ><br>
    <%= flash[:notice] %>  <% flash[:notice] = nil %><br>
  </div>
<% end %>
<% if @search_query.present? && (@search_query.errors.present? || @search_query.errors.any?) %>
  <h2 class="gamma text--center"><%= pluralize(@search_query.errors.count, "error") %> prohibited this search from being processed:</h2>
  <ul class="validation-list" >
    <% @search_query.errors.messages.each do |key, msg| %>
      <li class="validation-list__error text--center" ><%= msg[0] %></li>
    <% end %>
  </ul>
<% end %>
<div class="bmd_search_form">
  <%= semantic_form_for(@search_query) do |f| %>
    <div class="grid search_form">

      <div class="grid__item one-fifth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'first_name', "First name(s) #{app_icons[:info]}".html_safe, class: "ttip", title: info_tag_text[:firstname], 'aria-details': info_tag_text[:first_name] %>
        </div>
        <%= text_field_tag 'search_query[first_name]', set_value(@search_query.first_name), class: 'text-input', placeholder: 'Enter first name(s) here', role: 'textbox', id: 'first_name'%>
        <label>
          <small class="ttip__text">
            <%= check_box_tag 'search_query[first_name_exact_match]', set_value(@search_query.first_name_exact_match), set_value(@search_query.first_name_exact_match) %>
            Exact match on first names
          </small>
        </label>
      </div>

      <div class="grid__item one-fifth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'last_name', "Surname #{app_icons[:info]}".html_safe, class: "ttip", title: info_tag_text[:lastname], 'aria-details': info_tag_text[:lastname]%>
        </div>
        <%= text_field_tag 'search_query[last_name]', set_value(@search_query.last_name), class: 'text-input', id: 'last_name', placeholder: 'Enter Surname here'%>
        <label>
          <small class="ttip__text">
            <%= check_box_tag 'search_query[fuzzy]', set_value(@search_query.fuzzy), set_value(@search_query.fuzzy) %>
            Phonetic search surnames
          </small>
        </label>
      </div>

      <div class="grid__item one-fifth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'start_quarter', "Date range from #{app_icons[:info]}".html_safe, class: "ttip", title: info_tag_text[:date_range_from], 'aria-details': info_tag_text[:date_range_from] %>
        </div>
        <%= select_tag( 'search_query[start_quarter]', options_for_select([['Mar', 1], ['Jun', 2], ['Sep', 3], ['Dec', 4]], set_value(@search_query.start_quarter)), class: 'select_month_start date_year', 'aria-labelledby': 'start_quarter', id: 'from_quarter') %>
        <%= select_year(set_value(@search_query.start_year), { start_year: 1837, end_year: 1992 }, class: 'select_year_start date_year', name: 'search_query[start_year]', 'aria-labelledby': 'start_quarter', id: 'from_year') %>
      </div>

      <div class="grid__item one-fifth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'to_year', "Date range to #{app_icons[:info]}".html_safe, class: "ttip", title: info_tag_text[:date_range_to], 'aria-details': info_tag_text[:date_range_to] %>
        </div>
        <%= select_tag( 'search_query[end_quarter]', options_for_select([['Mar', 1], ['Jun', 2], ['Sep', 3], ['Dec', 4]], set_value(@search_query.end_quarter)), class: 'select_month_end date_year', 'aria-labelledby': 'to_year', id: 'to_quarter') %>
        <%= select_year(set_value(@search_query.end_year), {start_year: 1992, end_year: 1837 }, class: 'select_year_end date_year', name: 'search_query[end_year]', 'aria-labelledby': 'to_year', id: 'end_year') %>
      </div>
      <div class="grid__item one-fifth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'record_type', "Record Type #{app_icons[:info]}".html_safe, class: "ttip", title: info_tag_text[:record_type], 'aria-details': info_tag_text[:record_type] %>
        </div>

        <span class="stack_fields">
          <%= f.label :select_all, { :class => "header_label", id: 'all_record_types_label'} do %>
            <%= check_box_tag 'search_query[bmd_record_type][]', '0',set_checkbox_checked_value(field_value: @search_query.bmd_record_type, value: '0'),{ multiple: true, class: 'checkAll', id: 'bmd_record_type_all', 'aria-labelledby': 'all_record_types_label' } %>
            <%= content_text(:optional_checkbox_label, 'Select All') %>
          <% end %>
          <%= f.label :birth, { :class => "optional_attributes", id: 'birth_record_type_label'} do %>
            <%= check_box_tag 'search_query[bmd_record_type][]', 1,set_checkbox_checked_value(field_value: @search_query.bmd_record_type, value: '1'),{ multiple: true, class: 'checkboxtag birth', id: 'bmd_record_type_birth', 'aria-labelledby': 'birth_record_type_label' } %>
            <%= content_text(:optional_checkbox_label, 'Birth') %>
          <% end %>
          <%= f.label :death, { :class => "optional_attributes", id: 'death_record_type_label'} do %>
            <%= check_box_tag 'search_query[bmd_record_type][]', 2,set_checkbox_checked_value(field_value: @search_query.bmd_record_type, value: '2'),{ multiple: true, class: 'checkboxtag death', id: 'bmd_record_type_death', 'aria-labelledby': 'death_record_type_label' } %>
            <%= content_text(:optional_checkbox_label, 'Death') %>
          <% end %>
          <%= f.label :marriage, { :class => "optional_attributes", id: 'marriage_record_type_label'} do %>
            <%= check_box_tag 'search_query[bmd_record_type][]', 3,set_checkbox_checked_value(field_value: @search_query.bmd_record_type, value: '3'),{ multiple: true, class: 'checkboxtag marriage' , id: 'bmd_record_type_marriage', 'aria-labelledby': 'marriage_record_type_label'} %>
            <%= content_text(:optional_checkbox_label, 'Marriage') %>
          <% end %>
        </span>
      </div>

      <div class="grid__item one-fifth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'spouse_first_name', "Spouses first name(s) #{app_icons[:info]}".html_safe, class: "ttip", title: info_tag_text[:spouse_first_name], 'aria-details': info_tag_text[:spouse_first_name] %>
        </div>
        <%= text_field_tag 'search_query[spouse_first_name]', set_value(@search_query.spouse_first_name), class: 'text-input', placeholder: 'Enter spouse first name(s) here', id: 'spouse_first_name'%>
        <label>
          <small class="ttip__text">
            <%= check_box_tag 'search_query[identifiable_spouse_only]', set_value(@search_query.identifiable_spouse_only), set_value(@search_query.identifiable_spouse_only) %>
            Identifiable spouses only
          </small>
        </label>
      </div>

      <div class="grid__item one-quarter lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'spouses_mother_surname', "Spouses/Mothers surname #{app_icons[:info]}".html_safe, class: "ttip", title: info_tag_text[:spouse_mother_surname], 'aria-details': info_tag_text[:spouse_mother_surname] %>
        </div>
        <%= text_field_tag '', set_value(@search_query.spouses_mother_surname) || set_value(@search_query.mother_last_name), class: 'text-input', placeholder: '', id: 'spouses_mother_surname'%>
      </div>

      <div class="grid__item one-fifth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'death_select_box', "Age at Death #{app_icons[:info]}".html_safe, class: "ttip", title: date_of_birth_or_death_age_info[:death_age], 'aria-details': date_of_birth_or_death_age_info[:death_age], id: 'age_at_death_label'%>
        </div>
        <%= select_tag('search_query[death_at_age]', options_for_select(SearchQuery::DEATH_AGE_OPTIONS.map { |k,v| [v,k]}, set_value(@search_query.death_at_age)), {:prompt => "Select Death Age", id: 'death_select_box', 'aria-labelledby':'age_at_death_label'}) %>
        <span id="death_age_and_dob">
          <span id="death_age">
            <%= number_field_tag 'search_query[age_at_death]', set_value(@search_query.age_at_death), within: 0..199, placeholder: 'Enter Age', class: 'text-input', 'aria-labelledby':'age_at_death_label' %>
          </span>
          <span id="death_age_range">
            <%= number_field_tag 'search_query[min_age_at_death]', set_value(@search_query.min_age_at_death), within: 0..199, placeholder: 'min age', class: 'text-input', 'aria-labelledby':'age_at_death_label' %>
            <%= number_field_tag 'search_query[max_age_at_death]', set_value(@search_query.max_age_at_death), within: 0..199, placeholder: 'max age', class: 'text-input', 'aria-labelledby':'age_at_death_label' %>
          </span>
          <span id="death_dob">
            <%= date_field_tag 'search_query[dob_at_death]', set_value(@search_query.dob_at_death), class: 'text-input', 'aria-labelledby':'age_at_death_label' %>
          </span>
          <span id="death_dob_range">
            <%= date_field_tag 'search_query[min_dob_at_death]', set_value(@search_query.min_dob_at_death), class: 'text-input', 'aria-labelledby':'age_at_death_label' %>
            <%= date_field_tag 'search_query[max_dob_at_death]', set_value(@search_query.max_dob_at_death), class: 'text-input', 'aria-labelledby':'age_at_death_label' %>
          </span>
        </span>
        <label>
          <small class="ttip__text">
            <%= check_box_tag 'search_query[match_recorded_ages_or_dates]', set_value(@search_query.match_recorded_ages_or_dates), set_value(@search_query.match_recorded_ages_or_dates) %>
            Match only recorded ages
          </small>
        </label>
      </div>

      <div class="grid__item one-eighth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'volume', "Volume #{app_icons[:info]}".html_safe, class: "ttip", title: info_tag_text[:volume], 'aria-details': info_tag_text[:volume] %>
        </div>
        <%= text_field_tag 'search_query[volume]', set_value(@search_query.volume), class: 'text-input', id: 'volume', placeholder: 'Enter Volume' %>
      </div>

      <div class="grid__item one-eighth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'page', "Page #{app_icons[:info]}".html_safe, class: "ttip", title: info_tag_text[:page], 'aria-details': info_tag_text[:page] %>
        </div>
        <%= text_field_tag 'search_query[page]', set_value(@search_query.page), class: 'text-input', id: 'page', placeholder: 'Enter Page'%>
      </div>

      <div class="grid__item three-eighths lap-one-quarters palm-one-whole">
        <div class='labels'>
          <%= label_tag 'chapman_codes', "Counties #{app_icons[:info]}".html_safe, class: "ttip", title: info_tag_text[:firstname], 'aria-details': info_tag_text[:first_name], id: 'chapman_codes' %>
        </div>
        
        <% grouped_options = ChapmanCode.add_parenthetical_codes(ChapmanCode.remove_codes(ChapmanCode::CODES)) %>
        <% key = @search_query.chapman_codes unless @search_query.chapman_codes.nil?%>
        <%= f.select :chapman_codes, grouped_options_for_select(grouped_options, selected_key = key), {include_blank: 'All Counties'}, {multiple: true, id: 'search_query_chapman_codes', "aria-labelledby": 'chapman_codes'} %>
        <small class="additional">Select one place or none</small>
      </div>
      <div class="grid__item three-eighths lap-one-quarters palm-one-whole">
        <div class='labels'>
          <%= label_tag 'districts', "Districts #{app_icons[:info]}".html_safe, class: "ttip", title: info_tag_text[:firstname], 'aria-details': info_tag_text[:first_name] %>
        </div>
        <% @districts = DistrictToCounty.joins(:District).distinct.order( 'DistrictName ASC' )%>
        <%= f.select :districts, @districts.pluck(:DistrictName, :DistrictNumber), {include_hidden: false}, {multiple: true, id: 'search_query_districts', "aria-labelledby": 'districts'} %>
        <small class="additional">Select one place or none</small>
      </div>
    </div>
    <div class="grid action">
      <%#= f.action :submit,
      :as => :button,
      :label => 'Search ',
      :button_html => { :class => "ladda-button" , "data-style" => "contract" ,"data-color" =>"#a1185a" , "data-size" => "l", "data-spinner-color" => "#ffffff" },
      :wrapper_html => { :class => "grid__item one-whole push-half--ends" } %>
      <%= button_tag 'Clear Form', type: :reset, class: 'clear_form' %>
      <%= submit_tag 'Search', class: 'search_form_submit_button' , id: 'search_form_submit'%>
  <% end %>
</div>
<script type="text/javascript">
  Ladda.bind( 'button[type=submit]' );
</script>

<script type="text/javascript">
  $('.checkAll').on('change', function(e) {
    var $inputs = $('.checkboxtag');
    if(e.originalEvent === undefined) {
        var allChecked = true;
        $inputs.each(function(){
            allChecked = allChecked && this.checked;
        });
        this.checked = allChecked;
    } else {
        $inputs.prop('checked', this.checked);
    }
});

$('.checkboxtag').on('change', function(){
    $('.checkAll').trigger('change');
});
</script>

<script>
  $('#search_query_districts').empty();
  $(document).ready(function(){
    $("#search_query_chapman_codes").change(function() {
      var counties = [];
      $.each($("#search_query_chapman_codes option:selected"), function(){
        counties.push($(this).val())
      });
      $.ajax({
        url:  "/search_queries/districts_of_selected_counties",
        type: "GET",
        data: { selected_counties: counties }
      });
    });

    if ($("#search_query_chapman_codes option:selected").length ) {
      var counties = [];
      $.each($("#search_query_chapman_codes option:selected"), function(){
        counties.push($(this).val())
      });
      $.ajax({
        url:  "/search_queries/districts_of_selected_counties",
        type: "GET",
        data: { selected_counties: counties }
      });
    };


  var aad_value = $('#death_select_box').val();
  var aad_selection = document.getElementById('death_select_box');
  var aad_select_value = aad_selection.options[0].value


  var hide_all_death_options = function() {
    $('#death_age_and_dob').css('display','block')
    $('#search_query_age_at_death').hide();
    $('#search_query_min_age_at_death').hide();
    $('#search_query_max_age_at_death').hide();
    $('#search_query_dob_at_death').hide();
    $('#search_query_min_dob_at_death').hide();
    $('#search_query_max_dob_at_death').hide();
  }
  hide_all_death_options();

  var aad_selection_function = function() {
    var aad_value = $('#death_select_box').val();
    var aad_selection = document.getElementById('death_select_box');
    var aad_select_value = aad_selection.options[0].value
    if (aad_value === '1') {
      $('#search_query_age_at_death').show();
      $('#search_query_min_age_at_death').val('');
      $('#search_query_max_age_at_death').val('');
      $('#search_query_dob_at_death').val('');
      $('#search_query_min_dob_at_death').val('');
      $('#search_query_max_dob_at_death').val('');
      }
    else if (aad_value === '2') {
      $('#search_query_min_age_at_death').show();
      $('#search_query_max_age_at_death').show();
      $('#search_query_age_at_death').val('');
      $('#search_query_dob_at_death').val('');
      $('#search_query_min_dob_at_death').val('');
      $('#search_query_max_dob_at_death').val('');
    }
    else if (aad_value === '3') {
      $('#search_query_dob_at_death').show();
      $('#search_query_min_age_at_death').val('');
      $('#search_query_max_age_at_death').val('');
      $('#search_query_age_at_death').val('');
      $('#search_query_min_dob_at_death').val('');
      $('#search_query_max_dob_at_death').val('');
    }
    else if (aad_value === '4') {
      $('#search_query_min_dob_at_death').show();
      $('#search_query_max_dob_at_death').show();
      $('#search_query_min_age_at_death').val('');
      $('#search_query_max_age_at_death').val('');
      $('#search_query_age_at_death').val('');
      $('#search_query_dob_at_death').val('');
    }
    else if  (aad_value === '' || aad_value === null) {
      $('#death_select_box').val(aad_select_value);
      $('#search_query_min_dob_at_death').val('');
      $('#search_query_max_dob_at_death').val('');
      $('#search_query_min_age_at_death').val('');
      $('#search_query_max_age_at_death').val('');
      $('#search_query_age_at_death').val('');
      $('#search_query_dob_at_death').val('');
    }
  };

  aad_selection_function();

  $('#death_select_box').prop('disabled', 'disabled');
  $('.checkboxtag, .checkAll').change(function() {
    hide_all_death_options();
    $('#spouses_mother_surname').removeAttr('value');
    $('#spouse_first_name').removeAttr('value');
    $('#spouses_mother_surname').val('').prop('disabled', true)
    $('#spouses_mother_surname').css('background', '#ccc');
    $('#spouses_mother_surname').prop('placeholder', '')
    $('#spouses_mother_surname').prop('name', '')
    $('#spouse_first_name').prop('disabled',true)
    $('#spouse_first_name').prop('placeholder',"")
    $('#spouse_first_name').css('background', '#ccc');
    if ($(".birth").is(":checked") && !$('.death, .marriage, .checkAll').is(':checked')) {
      $('#spouses_mother_surname').prop('disabled', false);
      $('#spouses_mother_surname').prop('name', 'search_query[mother_last_name]');
      $('#spouses_mother_surname').css('background', 'white');
      $('#spouses_mother_surname').prop('placeholder', "Enter Mother's surname here");
      $('#death_select_box').prop('disabled', 'disabled');
      $('#death_select_box').css('background', '#ccc');
      $('#death_select_box').val([]);
    } else if ($(".marriage").is(":checked") && !$('.birth, .death, .checkAll').is(':checked')) {
      $('#spouses_mother_surname').prop('disabled', false)
      $('#spouses_mother_surname').prop('name', 'search_query[spouses_mother_surname]');
      $('#spouses_mother_surname').css('background', 'white');
      $('#spouses_mother_surname').prop('placeholder', "Enter Spouse's surname here")
      $('#death_select_box').prop('disabled', 'disabled');
      $('#death_select_box').css('background', '#ccc');
      $('#death_select_box').val([]);
      $('#spouses_mother_surname').prop('placeholder', "Enter Spouse's surname here")
      $('#spouses_mother_surname').prop('name', 'search_query[spouses_mother_surname]');
      $('#spouse_first_name').css('background', 'white');
    } else if ($(".death").is(":checked") && !$('.birth, .marriage, .checkAll').is(':checked')) {
      $('#death_select_box').prop('disabled', false);
      aad_selection_function();
      $('#death_select_box').css('background', 'white')
    } else {
      $('#death_select_box').css('background', '#ccc');
      $('#death_select_box').prop('disabled', 'disabled');
      $('#death_select_box').val([]);
    }
  });

  if ($(".birth").is(":checked") && !$('.death, .marriage, .checkAll').is(':checked')) {
    $('#spouses_mother_surname').prop('disabled', false)
    $('#spouses_mother_surname').prop('placeholder', "Enter Mother's surname here")
    $('#spouses_mother_surname').prop('name', 'search_query[mother_last_name]');
    $('#spouses_mother_surname').css('background', 'white');
    $('#death_select_box').prop('disabled', 'disabled');
    $('#death_select_box').css('background', '#ccc');
    $('#death_select_box').val([]);
  } else if ($(".marriage").is(":checked") && !$('.birth, .death, .checkAll').is(':checked')) {
    $('#spouses_mother_surname').prop('disabled', false)
    $('#spouse_first_name').prop('disabled',false)
    $('#spouse_first_name').prop('placeholder',"Enter Spouse First Name(s) here ")
    $('#spouses_mother_surname').prop('placeholder', "Enter Spouse's surname here")
    $('#spouses_mother_surname').prop('name', 'search_query[spouses_mother_surname]');
    $('#spouses_mother_surname').css('background', 'white');
    $('#death_select_box').prop('disabled', 'disabled');
    $('#death_select_box').css('background', '#ccc');
    $('#death_select_box').val([]);
    $('#spouse_first_name').css('background', 'white');
  } else if ($(".death").is(":checked") && !$('.birth, .marriage, .checkAll').is(':checked')) {
    $('#death_select_box').prop('disabled', false);
    $('#spouses_mother_surname').val('').prop('disabled', true)
    $('#spouses_mother_surname').css('background', '#ccc');
    $('#spouses_mother_surname').prop('placeholder', '');
    $('#spouses_mother_surname').prop('name', '');
    aad_selection_function();
    $('#death_select_box').css('background', 'white');
    $('#spouses_mother_surname').val('');
  } else {
    $('#spouses_mother_surname').val('').prop('disabled', true)
    $('#spouses_mother_surname').prop('placeholder', '')
    $('#spouses_mother_surname').prop('name', '');
    $('#death_select_box').prop('disabled', 'disabled');
    $('#death_select_box').css('background', '#ccc');
    $('#spouses_mother_surname').css('background', '#ccc');
    $('#spouses_mother_surname').val('');
    $('#death_select_box').val([]);
    $('#spouse_first_name').prop('disabled',true)
    $('#spouse_first_name').prop('placeholder',"")
    $('#spouse_first_name').css('background', '#ccc');
  };

  $('#death_select_box').bind('click', function(){
    hide_all_death_options();
    aad_selection_function();
  });

  var validate_death_age = function() {
    var min_age_value = $('#search_query_min_age_at_death').val();
    var min_age = parseInt(min_age_value);
    var max_age_value = $('#search_query_max_age_at_death').val();
    var max_age = parseInt(max_age_value);
    if (max_age < min_age) {
      $('#search_query_max_age_at_death')[0].setCustomValidity('Max death age should not lesser than Min death age');
    } else {
      $('#search_query_max_age_at_death')[0].setCustomValidity('');
    }
  };

  var validate_death_dob = function() {
    var min_dob = new Date($('#search_query_min_dob_at_death').val()).getTime();
    var max_dob = new Date($('#search_query_max_dob_at_death').val()).getTime();

    if (max_dob < min_dob) {
      $('#search_query_max_dob_at_death')[0].setCustomValidity('Max death date should not be lesser than Min death date');
    } else {
      $('#search_query_max_dob_at_death')[0].setCustomValidity('');
    }
  };

  $('#search_form_submit').click(function() {
    validate_death_age();
    validate_death_dob();
  });

  $('#bmd_record_type_death').change(function() {
    var aad_disabled = $('#death_select_box').prop('disabled');
    var aad_selection = document.getElementById('death_select_box');
    var aad_select_value = aad_selection.options[0].value
    if (aad_disabled === true) {
      $('#death_select_box').css('background', '#ccc')
      $('#death_select_box').val([])
    } else {
      $('#death_select_box').val(aad_select_value)
      $('#death_select_box').css('background', 'white')
    }
  });

  var aad_disable = $('#death_select_box').prop('disabled');
    if (aad_disable === true) {
      $('#death_select_box').css('background', '#ccc');
      $('#death_select_box').val([]);
    } else {
      //$('#death_select_box').val(aad_selection);
      $('#death_select_box').css('background', 'white');
    }

  $('.clear_form').click(function() {
    hide_all_death_options();
    $('#death_select_box').val([]);
    $('#death_select_box').prop('disabled', 'disabled');
    $('#death_select_box').css('background', '#ccc');
  });
});
</script>
