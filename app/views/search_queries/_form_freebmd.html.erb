<% if flash[:notice] %>
  <div class="weight--semibold text--center" ><br>
    <%= flash[:notice] %>  <% flash[:notice] = nil %><br>
  </div>
<% end %>
<% if @search_query.present? && (@search_query.errors.present? || @search_query.errors.any?) %>
  <h2 class="gamma text--center"><%= pluralize(@search_query.errors.count, "error") %> prohibited this search from being processed:</h2>
  <ul class="validation-list" >
    <% @search_query.errors.messages.each do |key, msg| %>
      <li class="validation-list__error text--center" ><%= msg[0] %></li>
    <% end %>
  </ul>
<% end %>
<div class="bmd_search_form">
  <%= semantic_form_for(@search_query) do |f| %>
    <div class="grid search_form">

      <div class="grid__item one-fifth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'first_name', 'First name(s)', class: "ttip" %>
          <%= label_tag 'first_name', "#{app_icons[:info]}".html_safe, class: 'ttip', tabindex: '0', title: info_tag_text[:firstname]%>
        </div>
        <%= text_field_tag 'search_query[first_name]', set_value(@search_query.first_name), class: 'text-input', placeholder: 'Enter first name(s) here', tabindex: '1'%>
        <%= check_box_tag 'search_query[first_name_exact_match]', true, false %>
        <%= content_text(:small,'Exact match on first names') %>
      </div>

      <div class="grid__item one-fifth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'last_name', 'Surname', class: "ttip" %>
          <%= label_tag 'last_name', "#{app_icons[:info]}".html_safe, class: 'ttip', tabindex: '3'%>
        </div>
        <%= text_field_tag 'search_query[last_name]', set_value(@search_query.last_name), class: 'text-input', id: 'last_name', placeholder: 'Enter Surname here', tabindex: '4' %>
        <%= check_box_tag 'search_query[fuzzy]', true, false %>
        <%= content_text(:small, 'Phonetic search surnames') %>
      </div>

      <div class="grid__item one-fifth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'start_quarter', 'Date range from', class: "ttip" %>
          <%= label_tag 'start_year', "#{app_icons[:info]}".html_safe, class: 'ttip', tabindex: '6'%>
        </div>
          <!--span class="ttip__text">Optional, YYYY. The first year you want to search</span-->
          <%= select_tag( 'search_query[start_quarter]', options_for_select([['Mar', 1], ['Jun', 2], ['Sep', 3], ['Dec', 4]], set_value(@search_query.start_quarter)), class: 'select_month_start', id: 'date_year') %>
          <%= select_year(set_value(@search_query.start_year), { start_year: 1837, end_year: 1992, prompt: '- - - -' }, class: 'select_year_start', name: 'search_query[start_year]') %>
      </div>

      <div class="grid__item one-fifth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'to_year', 'Date range to', class: "ttip" %>
          <%= label_tag 'to_year', "#{app_icons[:info]}".html_safe, class: 'ttip', tabindex: '6'%>
        </div>
        <%= select_tag( 'search_query[end_quarter]', options_for_select([['Mar', 1], ['Jun', 2], ['Sep', 3], ['Dec', 4]], set_value(@search_query.end_quarter)), class: 'select_month_end', id: 'date_year') %>
        <%= select_year(set_value(@search_query.end_year), {start_year: 1837, end_year: 1992, prompt: '- - - -'}, class: 'select_year_end', name: 'search_query[end_year]') %>
      </div>
      <div class="grid__item one-fifth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'record_type', 'Record Type', class: "ttip" %>
          <%= label_tag 'record_type', "#{app_icons[:info]}".html_safe, class: 'ttip_text', tabindex: '0', title: info_tag_text[:record_type]%>
        </div>
        <span class="stack_fields">
          <%= f.label :select_all, { :class => "header_label", :tabindex => "0" } do %>
            <%= check_box_tag 'search_query[bmd_record_type][]', '0',set_checkbox_checked_value(field_value: @search_query.bmd_record_type, value: '0'),{ multiple: true, class: 'checkAll', id: 'bmd_record_type_all' } %>
            <%= content_text(:optional_checkbox_label, 'Select All') %>
          <% end %>
          <%= f.label :birth, { :class => "optional_attributes", :tabindex => "0" } do %>
            <%= check_box_tag 'search_query[bmd_record_type][]', 1,set_checkbox_checked_value(field_value: @search_query.bmd_record_type, value: '1'),{ multiple: true, class: 'checkboxtag birth', id: 'bmd_record_type birth' } %>
            <%= content_text(:optional_checkbox_label, 'Birth') %>
          <% end %>
          <%= f.label :death, { :class => "optional_attributes", :tabindex => "0" } do %>
            <%= check_box_tag 'search_query[bmd_record_type][]', 2,set_checkbox_checked_value(field_value: @search_query.bmd_record_type, value: '2'),{ multiple: true, class: 'checkboxtag death', id: 'bmd_record_type death' } %>
            <%= content_text(:optional_checkbox_label, 'Death') %>
          <% end %>
          <%= f.label :marriage, { :class => "optional_attributes", :tabindex => "0" } do %>
            <%= check_box_tag 'search_query[bmd_record_type][]', 3,set_checkbox_checked_value(field_value: @search_query.bmd_record_type, value: '3'),{ multiple: true, class: 'checkboxtag marriage' , id: 'bmd_record_type marriage'} %>
            <%= content_text(:optional_checkbox_label, 'Marriage') %>
          <% end %>
        </span>
      </div>

      <div class="grid__item one-fifth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'spouse_first_name', 'Spouses first name(s)', class: "ttip" %>
          <%= label_tag 'spouse_first_name', "#{app_icons[:info]}".html_safe, class: 'ttip', tabindex: '0', title: info_tag_text[:firstname]%>
        </div>
        <%= text_field_tag 'search_query[spouse_first_name]', set_value(@search_query.spouse_first_name), class: 'text-input', placeholder: 'Enter spouse first name(s) here', tabindex: '1'%>
        <%= check_box_tag 'hello', true, false %>
        <%= content_text(:small,'Identifiable spouses only') %>
      </div>

      <div class="grid__item one-quarter lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'spouses_mother_surname', 'Spouses/Mothers surname', class: "ttip" %>
          <%= label_tag 'spouses_mother_surname', "#{app_icons[:info]}".html_safe, class: 'ttip', tabindex: '0', title: info_tag_text[:firstname]%>
        </div>
        <%= text_field_tag 'search_query[spouses_mother_surname]', set_value(@search_query.spouses_mother_surname), class: 'text-input', placeholder: '', tabindex: '1'%>
      </div>

      <div class="grid__item one-fifth lap-one-half palm-one-whole">
        <div class='labels'>
         
          <%= label_tag 'age_at_death', 'Age at Death', class: "ttip" %>
          <%= label_tag 'date_of_birth_or_age_at_death', "#{app_icons[:info]}".html_safe, class: 'ttip', tabindex: '0', title: date_of_birth_or_death_age_info[:death_age]%>
        </div>
        <%= select_tag(:death_at_age, options_for_select(SearchQuery::DEATH_AGE_OPTIONS.map { |k,v| [v,k] }), {:prompt => "-- Select Deat Age --", id: 'death_select_box'}) %>
        <span id="death_age_and_dob">
          <span id="death_age">
            <%= number_field_tag 'search_query[age_at_death]', nil, within: 0..199, placeholder: 'Enter Age', class: 'text-input' %>
          </span>
          <span id="death_age_range">
            <%= number_field_tag 'search_query[min_age_at_death]', nil, within: 0..199, placeholder: 'min age', class: 'text-input' %>
            <%= number_field_tag 'search_query[max_age_at_death]', nil, within: 0..199, placeholder: 'max age', class: 'text-input' %>
          </span>
          <span id="death_dob">
            <%= date_field_tag 'search_query[dob_at_death]', nil, class: 'text-input' %>
          </span>
          <span id="death_dob_range">
            <%= date_field_tag 'search_query[min_dob_at_death]', nil, class: 'text-input' %>
            <%= date_field_tag 'search_query[max_dob_at_death]', nil, class: 'text-input' %>
          </span>
        </span>
        <%= check_box_tag 'search_query[match_recorded_ages_or_dates]', true, false %>
        <%= content_text(:small, 'Match only recorded ages') %>
      </div>

      <div class="grid__item one-eighth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'volume', 'Volume', class: "ttip" %>
          <%= label_tag 'volume', "#{app_icons[:info]}".html_safe, class: 'ttip', tabindex: '3'%>
        </div>
        <%= text_field_tag 'search_query[volume]', set_value(@search_query.volume), class: 'text-input', id: 'volume', placeholder: 'Enter Volume', tabindex: '4' %>
      </div>

      <div class="grid__item one-eighth lap-one-half palm-one-whole">
        <div class='labels'>
          <%= label_tag 'page', 'Page', class: "ttip" %>
          <%= label_tag 'page', "#{app_icons[:info]}".html_safe, class: 'ttip', tabindex: '3'%>
        </div>
        <%= text_field_tag 'search_query[page]', set_value(@search_query.page), class: 'text-input', id: 'page', placeholder: 'Enter Page', tabindex: '4' %>
      </div>

      <div class="grid__item three-eighths lap-one-quarters palm-one-whole" id="search_query_chapman_codes_input">
        <div class='labels'>
          <%= label_tag 'chapman_codes', 'Counties', class: "ttip" %>
          <%= label_tag 'chapman_codes', "#{app_icons[:info]}".html_safe, class: 'ttip', tabindex: '0', title: info_tag_text[:firstname]%>
        </div>
        
        <% grouped_options = ChapmanCode.add_parenthetical_codes(ChapmanCode.remove_codes(ChapmanCode::CODES)) %>
        <% key = @search_query.chapman_codes unless @search_query.chapman_codes.nil?%>
        <%= f.select :chapman_codes, grouped_options_for_select(grouped_options, selected_key = key), {include_blank: 'All Counties'}, {multiple: true} %>
        <small class="additional">Select one place or none</small>
      </div>
      <div class="grid__item three-eighths lap-one-quarters palm-one-whole"  id="search_query_chapman_codes_input">
        <div class='labels'>
          <%= label_tag 'districts', 'Districts', class: "ttip" %>
          <%= label_tag 'districts', "#{app_icons[:info]}".html_safe, class: 'ttip', tabindex: '0', title: info_tag_text[:firstname]%>
        </div>
        <% districts_names = DistrictToCounty.joins(:District).distinct.order( 'DistrictName ASC' )%>
        <%= f.select :districts, districts_names.pluck(:DistrictName, :DistrictNumber), {include_hidden: false}, {multiple: true} %>
        <small class="additional">Select one place or none</small>
      </div>
    </div>
    <div class="grid action">
      <%#= f.action :submit,
      :as => :button,
      :label => 'Search ',
      :button_html => { :class => "ladda-button" , "data-style" => "contract" ,"data-color" =>"#a1185a" , "data-size" => "l", "data-spinner-color" => "#ffffff" },
      :wrapper_html => { :class => "grid__item one-whole push-half--ends" } %>
      <%= button_tag 'Clear Form', type: :reset, class: 'clear_form' %>
      <%= submit_tag 'Search', class: 'search_form_submit_button' , id: 'search_form_submit'%>
  <% end %>
</div>
<script type="text/javascript">
  Ladda.bind( 'button[type=submit]' );
</script>

<script type="text/javascript">
  $('.checkAll').on('change', function(e) {
    var $inputs = $('.checkboxtag');
    if(e.originalEvent === undefined) {
        var allChecked = true;
        $inputs.each(function(){
            allChecked = allChecked && this.checked;
        });
        this.checked = allChecked;
    } else {
        $inputs.prop('checked', this.checked);
    }
});

$('.checkboxtag').on('change', function(){
    $('.checkAll').trigger('change');
});
</script>

<script>
$(document).ready(function(){
  $("#search_query_chapman_codes").change(function() {
    var counties = [];
    $.each($("#search_query_chapman_codes option:selected"), function(){
      counties.push($(this).val())
    });
    $.ajax({
      url:  "/search_queries/districts_of_selected_counties",
      type: "GET",
      data: { selected_counties: counties }
    });
  });


  $('#death_select_box').prop('disabled', 'disabled');
  $('.checkboxtag, .checkAll').change(function() {
    hide_all_death_options();
    if ($(".birth").is(":checked") && !$('.death, .marriage, .checkAll').is(':checked')) {
      $('#search_query_spouses_mother_surname').prop('disabled', false)
      $('#search_query_spouses_mother_surname').prop('placeholder', "Enter Mother's surname here")
      $('#death_select_box').val("").prop('disabled', 'disabled');
    } else if ($(".marriage").is(":checked") && !$('.birth, .death, .checkAll').is(':checked')) {
      $('#search_query_spouses_mother_surname').prop('disabled', false)
      $('#search_query_spouses_mother_surname').prop('placeholder', "Enter Spouse's surname here")
      $('#death_select_box').val("").prop('disabled', 'disabled');
    } else if ($(".death").is(":checked") && !$('.birth, .marriage, .checkAll').is(':checked')) {
      $('#death_select_box').prop('disabled', false);
    } else {
      $('#search_query_spouses_mother_surname').val('').prop('disabled', true)
      $('#search_query_spouses_mother_surname').prop('placeholder', '')
      $('#death_select_box').val("").prop('disabled', 'disabled');
    }
  });

  var hide_all_death_options = function() {
    $('#death_age_and_dob').css('display','block')
    $('#search_query_age_at_death').val('').hide();
    $('#search_query_min_age_at_death').val('').hide();
    $('#search_query_max_age_at_death').val('').hide();
    $('#search_query_dob_at_death').val('').hide();
    $('#search_query_min_dob_at_death').val('').hide();
    $('#search_query_max_dob_at_death').val('').hide();
  }
  hide_all_death_options();

  $('#death_select_box').bind('click', function(){
    hide_all_death_options();
    var selected = $(this).val();
    if (selected == '1') {
      $('#search_query_age_at_death').show();
    }
    if (selected == '2') {
      $('#search_query_min_age_at_death').show();
      $('#search_query_max_age_at_death').show();
    }
    if (selected == '3') {
      $('#search_query_dob_at_death').show();
    }
    if (selected == '4') {
      $('#search_query_min_dob_at_death').show();
      $('#search_query_max_dob_at_death').show();
    }
  });


  var validate_death_age = function() {
    var min_age = $('#min_age_at_death').val();
    var max_age = $('#max_age_at_death').val();
    if (max_age < min_age) {
      $('#max_age_at_death')[0].setCustomValidity('Max death age should not lesser than Min death age');
    }
  };

  var validate_death_dob = function() {
    var min_dob = new Date($('#min_dob_at_death').val()).getTime();
    var max_dob = new Date($('#max_dob_at_death').val()).getTime();

    if (max_dob < min_dob) {
      $('#max_dob_at_death')[0].setCustomValidity('Max death date should not be lesser than Min death date');
    }
  }

  $('#search_form_submit').click(function() {
    validate_death_age();
    validate_death_dob();
  });

  $('.clear_form').click(function() {
    hide_all_death_options();
    $('#death_select_box').val("").prop('disabled', 'disabled');
  });
});
</script>
